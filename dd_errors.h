#ifndef __DD_ERRORS_H__
#define __DD_ERRORS_H__

/* Direct Draw Error Messages */
static const char *aUndefined = "<undefined>";
static const char *aDderr_generic  = "DDERR_GENERIC";
static const char *aDderr_unsuppor = "DDERR_UNSUPPORTED";
static const char *aDderr_invalidp = "DDERR_INVALIDPARAMS";
static const char *aDderr_outofmem = "DDERR_OUTOFMEMORY";
static const char *aDderr_cannotat = "DDERR_CANNOTATTACHSURFACE";
static const char *aDderr_alreadyi = "DDERR_ALREADYINITIALIZED";
static const char *aDderr_currentl = "DDERR_CURRENTLYNOTAVAIL";
static const char *aDderr_cannotde = "DDERR_CANNOTDETACHSURFACE";
static const char *aDderr_heightal = "DDERR_HEIGHTALIGN";
static const char *aDderr_exceptio = "DDERR_EXCEPTION";
static const char *aDderr_invalidc = "DDERR_INVALIDCAPS";
static const char *aDderr_incompat = "DDERR_INCOMPATIBLEPRIMARY";
static const char *aDderr_invalidm = "DDERR_INVALIDMODE";
static const char *aDderr_invali_0 = "DDERR_INVALIDCLIPLIST";
static const char *aDderr_invali_1 = "DDERR_INVALIDPIXELFORMAT";
static const char *aDderr_invalido = "DDERR_INVALIDOBJECT";
static const char *aDderr_lockedsu = "DDERR_LOCKEDSURFACES";
static const char *aDderr_invalidr = "DDERR_INVALIDRECT";
static const char *aDderr_noalphah = "DDERR_NOALPHAHW";
static const char *aDderr_no3d     = "DDERR_NO3D";
static const char *aDderr_nocolorc = "DDERR_NOCOLORCONVHW";
static const char *aDderr_noclipli = "DDERR_NOCLIPLIST";
static const char *aDderr_nocolork = "DDERR_NOCOLORKEY";
static const char *aDderr_nocooper = "DDERR_NOCOOPERATIVELEVELSET";
static const char *aDderr_nofliphw = "DDERR_NOFLPHW";
static const char *aDderr_nocolo_0 = "DDERR_NOCOLORKEYHW";
static const char *aDderr_nodirect = "DDERR_NODIRECTDRAWSUPPORT";
static const char *aDderr_noexclus = "DDERR_NOEXVLUSIVEMODE";
static const char *aDderr_nomirror = "DDERR_NOMIRRORHW";
static const char *aDderr_nogdi    = "DDERR_NOGDI";
static const char *aDderr_nooverla = "DDERR_NOOVERLAYHW";
static const char *aDderr_notfound = "DDERR_NOTFOUND";
static const char *aDderr_norotati = "DDERR_NOROTATIONHW";
static const char *aDderr_noraster = "DDERR_NORASTEROPHW";
static const char *aDderr_not4bitc = "DDERR_NOT4BITCOLOR";
static const char *aDderr_nostretc = "DDERR_NOSTRETCHHW";
static const char *aDderr_not8bitc = "DDERR_NOT8BITCOLOR";
static const char *aDderr_not4bi_0 = "DDERR_NOT4BITCOLORINDEX";
static const char *aDderr_novsynch = "DDERR_NOVSYNCHW";
static const char *aDderr_notextur = "DDERR_NOTEXTUREHW";
static const char *aDderr_nozoverl = "DDERR_NOZOVERLAYHW";
static const char *aDderr_nozbuffe = "DDERR_NOZBUFFERHW";
static const char *aDderr_outofvid = "DDERR_OUTOFVIDEOMEMORY";
static const char *aDderr_outofcap = "DDERR_OUTOFCAPS";
static const char *aDderr_colorkey = "DDERR_COLORKEYNOTSET";
static const char *aDderr_overlayc = "DDERR_OVERLAYCANTCLIP";
static const char *aDderr_overla_0 = "DDERR_OVERLAYCOLORKEYONLYONEACTIVE";
static const char *aDderr_paletteb = "DDERR_PALETTEBUSY";
static const char *aDderr_surfac_0 = "DDERR_SURFACEALREADYDEPENDENT";
static const char *aDderr_surfacea = "DDERR_SURFACEALREADYATTACHED";
static const char *aDderr_surfaceb = "DDERR_SURFACEBUSY";
static const char *aDderr_cantlock = "DDERR_CANTLOCKSURFACE";
static const char *aDderr_surfacei = "DDERR_SURFACEISOBSCURED";
static const char *aDderr_surfacel = "DDERR_SURFACELOST";
static const char *aDderr_surfacen = "DDERR_SURFACENOTATTACHED";
static const char *aDderr_toobighe = "DDERR_TOOBIGHEIGHT";
static const char *aDderr_toobigsi = "DDERR_TOOBIGSIZE";
static const char *aDderr_toobigwi = "DDERR_TOOBIGWIDTH";
static const char *aDderr_unsupp_0 = "DDERR_UNSUPPORTEDFORMAT";
static const char *aDderr_unsupp_1 = "DDERR_UNSUPPORTEDMASK";
static const char *aDderr_vertical = "DDERR_VERTICALBLANKINPROGRESS";
static const char *aDderr_wasstill = "DDERR_WASSTILLDRAWING";
static const char *aDderr_xalign   = "DDERR_XALIGN";
static const char *aDderr_invalidd = "DDERR_INVALIDDIRECTDRAWGUID";
static const char *aDderr_directdr = "DDERR_DIRECTDRAWALREADYCREATED";
static const char *aDderr_nodire_0 = "DDERR_NODIRECTDRAWHW";
static const char *aDderr_primarys = "DDERR_PRIMARYSURFACEALREADYEXISTS";
static const char *aDderr_noemulat = "DDERR_NOEMULATION";
static const char *aDderr_regionto = "DDERR_REGIONTOOSMALL";
static const char *aDderr_clipperi = "DDERR_CLIPPERISSUSINGHWND";
static const char *aDderr_noclippe = "DDERR_NOCLIPPERATTACHED";
static const char *aDderr_nohwnd   = "DDERR_NOHWND";
static const char *aDderr_hwndsubc = "DDERR_HWNDSUBCLASSED";
static const char *aDderr_hwndalre = "DDERR_HWNDALREADYSET";
static const char *aDderr_nopalett = "DDERR_NOPALETTEATTACHED";
static const char *aDderr_nopale_0 = "DDERR_NOPALETTEHW";
static const char *aDderr_bltfastc = "DDERR_BLTFASTCANTCLIP";
static const char *aDderr_noblthw  = "DDERR_NOBLTHW";
static const char *aDderr_noddrops = "DDERR_NODDROPSHW";
static const char *aDderr_overlayn = "DDERR_OVERLAYNOTVISIBLE";
static const char *aDderr_noover_0 = "DDERR_OVERLAYNOTVISIBLE";
static const char *aDderr_invali_2 = "DDERR_INVALIDPOSITION";
static const char *aDderr_notaover = "DDERR_NOTAOVERLAYSURFACE";
static const char *aDderr_exclusiv = "DDERR_EXCLUSIVEMODEALREADYSET";
static const char *aDderr_notflipp = "DDERR_NOTFLIPPABLE";
static const char *aDderr_cantdupl = "DDERR_CANTDULICATE";
static const char *aDderr_notlocke = "DDERR_NOTLOCKED";
static const char *aDderr_cantcrea = "DDERR_CANTCREATEDC";
static const char *aDderr_nodc     = "DDERR_NODC";
static const char *aDderr_wrongmod = "DDERR_WRONGMODE";
static const char *aDderr_implicit = "DDERR_IMPLICITLYCREATED";
static const char *aDderr_notpalet = "DDERR_NOTPALETTIZED";
static const char *aDderr_unsupp_2 = "DDERR_UNSUPPORTEDMODE";
static const char *aDderr_nomipmap = "DDERR_NOMIPMAPHW";
static const char *aDderr_invalids = "DDERR_INVALIDSURFACETYPE";
static const char *aDderr_dcalread = "DDERR_DCALREADYCREATED";
static const char *aDderr_cantpage = "DDERR_CANTPAGELOCK";
static const char *aDderr_cantpa_0 = "DDERR_CANTPAGEUNLOCK";
static const char *aDderr_notpagel = "DDERR_NOTPAGELOCKED";

#endif